workflows:
  flutter-test:
    name: Flutter test workflow
    max_build_duration: 20
    labels:
      - Test
    environment:
      flutter: stable
      groups:
        - codecov_credentials
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
    triggering:
      branch_patterns:
        - include: true
          pattern: main
      events:
        - push
        - pull_request
      cancel_previous_builds: true
    when:
      changeset:
        includes:
          - lib/
          - test/
    scripts:
      - name: Exit test if keyword 'skiptestci' is defined
        script: |
          set -e
          set -x
          export COMMIT_MSG=$(git log -1 --pretty=%B)
          echo COMMIT_MSG
          if [[ $COMMIT_MSG == *"skiptestci"* ]]
            then
              echo "Commit includes 'skiptestci' in it's message, exiting..."
              exit 1
            else 
              echo "Commit message does not include 'skiptestci', moving forward..."
          fi
      - name: Get flutter packages
        script: flutter pub get
      - name: Run flutter analyze
        script: flutter analyze
      - name: Run flutter test
        script: |
          # Install lcov if not already installed
          if ! command -v lcov &> /dev/null
            then echo "lcov is not installed. Installing..."
            HOMEBREW_NO_AUTO_UPDATE=1 brew install lcov
          else
            echo "lcov is already installed, proceeding..."
          fi
          
          # Run the tests and generate the coverage report
          # Redirect all output to test-results.json
          flutter test --coverage --machine > test-results.json
          
          # Assign the exit code to a variable
          exit_code=$?
          
          if [[ $exit_code != 0 ]]; then
            echo "Error: One or more test failed with exit code $exit_code"
            exit $exit_code
          else
            echo "Success: All test passed"
          fi
          
          # Extract the code coverage percentage
          code_coverage=$(lcov --list $CM_BUILD_DIR/coverage/lcov.info | sed -n "s/.*Total:|\(.*\)%.*/\1/p")
          
          # Print the code coverage percentage to the console
          echo "Code Coverage: ${code_coverage}% "

          # Print the code coverage target
          echo "Code Coverage Target: ${CODE_COVERAGE_TARGET}% "
          
          # Check if the code coverage is less than the target
          if (( $(echo "$code_coverage < $CODE_COVERAGE_TARGET" | bc) ))
            then { echo "code coverage is less than $CODE_COVERAGE_TARGET" && exit 1; }
          fi
        test_report: test-results.json
      - name: Codecov upload
        script: |
          curl -Os https://uploader.codecov.io/latest/macos/codecov
          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}